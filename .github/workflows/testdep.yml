name: TestDependencies

on:
  push:
    branches:
        - develop

      
jobs:
  setup-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_pgsql
          tools: composer:v2, phpunit

      - name: Install unzip
        run: sudo apt-get install unzip

      - name: Clear Composer cache
        run: composer clear-cache

      - name: Remove vendor directory
        run: rm -rf backend/vendor

      - name: Remove composer.lock
        run: rm -f backend/composer.lock

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/backend/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: |
          cd "backend"
          composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env file
        run: |
          cd "backend"
          cp .env.example .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Generate key
        run: |
          cd "backend"
          php artisan key:generate

      - name: Run migration
        run: |
          cd "backend"
          php artisan migrate
